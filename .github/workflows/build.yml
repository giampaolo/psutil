on: [push, pull_request]
name: build
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  tests:
    name: "${{ matrix.os }}, ${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        include:
          - { os: macos-13, arch: x86_64 }
          - { os: macos-14, arch: arm64 }

    steps:
      - uses: actions/checkout@v5

      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ runner.os == 'macOS' && runner.arch == 'ARM64' && '3.8' || '3.11' }}

      - name: Build wheels (ASan enabled)
        uses: pypa/cibuildwheel@v3.2.1
        env:
          CIBW_ARCHS: "${{ matrix.arch }}"
          CIBW_ENABLE: "cpython-freethreading ${{ startsWith(github.ref, 'refs/tags/') && '' || 'cpython-prerelease' }}"
          # ASan instrumentation
          CIBW_ENVIRONMENT: >
            MACOSX_DEPLOYMENT_TARGET=10.10
            CFLAGS="-fsanitize=address -g -O1 -fno-omit-frame-pointer"
            LDFLAGS="-fsanitize=address"
          # Run tests with ASan preloaded
          CIBW_TEST_COMMAND: >
            DYLD_INSERT_LIBRARIES=$(xcrun --show-sdk-path)/usr/lib/clang/$(clang --version | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' | head -1)/lib/darwin/libclang_rt.asan_osx_dynamic.dylib
            python -c "import psutil; print('ASan preloaded OK'); import psutil.tests; psutil.tests.test_main()"
