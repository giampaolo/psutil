name: build
on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  asan-tests:
    name: "${{ matrix.os }}, ${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - { os: macos-13, arch: x86_64 }
          - { os: macos-14, arch: arm64 }

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel pytest pytest-xdist pytest-instafail pytest-subtests psutil

      - name: Build psutil with ASan
        run: |
          export CFLAGS="-fsanitize=address -g -O1 -fno-omit-frame-pointer"
          export LDFLAGS="-fsanitize=address"
          echo "Building psutil with ASan..."
          python setup.py build_ext --force --inplace
          python -c "import psutil; print('psutil built:', psutil.__file__)"

      - name: Create ASan launcher
        run: |
          echo 'Creating ASan launcher...'
          cat > run_with_asan.c <<'EOF'
          #include <unistd.h>
          #include <stdlib.h>
          int main(int argc, char** argv) {
              if (argc < 3) {
                  write(2, "Usage: run_with_asan <asan_path> <python-args...>\n", 50);
                  return 1;
              }
              setenv("DYLD_INSERT_LIBRARIES", argv[1], 1);
              execvp("python3", argv + 2);
              return 1;
          }
          EOF
          clang run_with_asan.c -o run_with_asan

      - name: Run tests under ASan
        run: |
          ASAN_RT=$(clang -print-file-name=libclang_rt.asan_osx_dynamic.dylib)
          echo "Using ASan runtime: $ASAN_RT"
          ./run_with_asan "$ASAN_RT" -c "import psutil; print('ASan active, psutil loaded OK')"
          ./run_with_asan "$ASAN_RT" -m pytest -q psutil/tests --maxfail=1 --disable-warnings

  # Run linters (kept for completeness)
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
      - name: Run linters
        run: make ci-lint
