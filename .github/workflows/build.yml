name: macOS ASan Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  asan:
    runs-on: macos-14
    env:
      PYTHON_VERSION: "3.11.14"

    steps:
      - uses: actions/checkout@v4

      # Install dependencies
      - name: Install build dependencies
        run: |
          brew update
          brew install llvm@15 pkg-config

      # Build Homebrew Python from source (unsigned)
      - name: Install Python from source
        run: |
          brew install python@$PYTHON_VERSION --build-from-source
          PYBIN=$(brew --prefix python@$PYTHON_VERSION)/bin/python3
          echo "PYBIN=$PYBIN" >> $GITHUB_ENV

      # Create ASan runner
      - name: Create ASan wrapper
        run: |
          cat > run_with_asan.c <<'EOF'
          #include <unistd.h>
          #include <stdlib.h>
          #include <stdio.h>

          int main(int argc, char** argv) {
              if (argc < 3) {
                  fprintf(stderr, "Usage: run_with_asan <asan_path> <python args...>\n");
                  return 1;
              }
              setenv("DYLD_INSERT_LIBRARIES", argv[1], 1);
              execvp(argv[2], &argv[2]);
              perror("execvp");
              return 1;
          }
          EOF
          clang -arch arm64 run_with_asan.c -o run_with_asan

      # Get ASan runtime path
      - name: Get ASan runtime
        run: |
          ASAN_RT=$(clang -print-file-name=libclang_rt.asan_osx_dynamic.dylib)
          echo "ASAN_RT=$ASAN_RT" >> $GITHUB_ENV

      # Build psutil with ASan flags
      - name: Build psutil with ASan
        run: |
          export CFLAGS="-fsanitize=address -g -O1 -fno-omit-frame-pointer"
          export LDFLAGS="-fsanitize=address"
          ${{ env.PYBIN }} -m pip install --upgrade pip setuptools wheel
          ${{ env.PYBIN }} setup.py build_ext --inplace

      # Run simple ASan check
      - name: Check ASan works
        run: |
          ./run_with_asan "$ASAN_RT" "${{ env.PYBIN }}" -c "import psutil; print('ASan OK')"

      # Run pytest under ASan
      - name: Run tests with ASan
        run: |
          ./run_with_asan "$ASAN_RT" "${{ env.PYBIN }}" -m pytest -q psutil/tests \
            --disable-warnings --maxfail=1
