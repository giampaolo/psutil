name: build
on: [push, pull_request]

jobs:
  asan-tests:
    name: "macOS ASan (arm64)"
    runs-on: macos-14
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel pytest

      - name: Build psutil with ASan (ARM64)
        env:
          ARCHFLAGS: "-arch arm64"
        run: |
          export CC=clang
          export CFLAGS="-fsanitize=address -arch arm64 -g -O1 -fno-omit-frame-pointer"
          export LDFLAGS="-fsanitize=address -arch arm64"
          echo "Building psutil for ARM64 with ASan..."
          python setup.py build_ext --force --inplace

      - name: Create ASan launcher
        run: |
          cat > run_with_asan.c <<'EOF'
          #include <unistd.h>
          #include <stdlib.h>
          #include <stdio.h>

          int main(int argc, char** argv) {
              if (argc < 3) {
                  fprintf(stderr,
                      "Usage: run_with_asan <asan_path> <python args...>\n");
                  return 1;
              }
              setenv("DYLD_INSERT_LIBRARIES", argv[1], 1);
              // Build argv for execvp: python3 + rest of args after asan_path
              char** new_argv = argv + 2;
              execvp("python3", new_argv);
              perror("execvp");
              return 1;
          }
          EOF
          clang -arch arm64 run_with_asan.c -o run_with_asan

      - name: Run tests under ASan
        run: |
          ASAN_RT=$(clang -print-file-name=libclang_rt.asan_osx_dynamic.dylib)
          echo "Using ASan runtime: $ASAN_RT"
          ./run_with_asan "$ASAN_RT" python3 -m pytest -q psutil/tests --disable-warnings --maxfail=1
